/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {Component} from 'react';
import {
  StyleSheet,
  Text,
  View,
  Dimensions,
  Image,
  Animated,
  PanResponder,
} from 'react-native';
import TinderSwipe from 'react-native-tinder-card';
import {Button, Chip, FAB} from 'react-native-paper';

const users = [
  {
    id: '1',
    title: 'Lauren',
    subtitle: '22',
    pictures: [
      {uri: 'https://dummyimage.com/400x600/1071e8/ffffff.png&text=1'},
      {uri: 'https://dummyimage.com/400x600/ed481a/ffffff.png&text=2'},
      {uri: 'https://dummyimage.com/400x600/10e626/ffffff.png&text=3'},
      {uri: 'https://dummyimage.com/400x600/1071e8/ffffff.png&text=4'},
    ],
  },
  {
    id: '2',
    pictures: [
      {uri: 'https://dummyimage.com/400x600/1071e8/ffffff.png&text=1'},
      {uri: 'https://dummyimage.com/400x600/ed481a/ffffff.png&text=2'},
      {uri: 'https://dummyimage.com/400x600/10e626/ffffff.png&text=3'},
    ],
  },
];

const {width, height} = Dimensions.get('screen');

export default class App extends Component {
  constructor(props) {
    super(props);
    this.card = React.createRef();
  }

  renderDetails = item => {
    return (
      <View style={{padding: 20}}>
        <Text>{JSON.stringify(item)}</Text>
        <Button
          mode={'contained'}
          onPress={() => this.card.current.showGallery()}>
          top
        </Button>
      </View>
    );
  };

  render() {
    return (
      <View style={{flex: 1, backgroundColor: 'cyan'}}>
        <View style={{height: 100}}></View>
        <TinderSwipe
          ref={this.card}
          data={users[0]}
          width={width - 20}
          height={height - 200}
          onScrollToDetails={() => console.log('details')}
          tags={[
            {title: 'demo', color: 'cyan', icon: 'information'},
            {title: 'demo', color: '', icon: 'information'},
            {title: 'demo', color: '', icon: 'information'},
            {title: 'demo', color: '', icon: 'information'},
          ]}
          renderTag={({title, color, icon}, index) => (
            <Chip
              key={index}
              style={color && {backgroundColor: color}}
              mode={'outlined'}
              icon={icon}
              color={color}
              onPress={() => console.log(title)}>
              {title}
            </Chip>
          )}
          actions={['superlike', 'like', 'dislike']}
          renderAction={(action, index) => {
            const {
              color: backgroundColor,
              icon,
              small,
            } = action === 'superlike'
              ? {color: 'purple', icon: 'heart-flash'}
              : action === 'like'
              ? {color: 'red', icon: 'heart'}
              : {color: 'black', icon: 'close', small: true};

            return (
              <FAB
                key={index}
                icon={icon}
                small={small}
                style={{backgroundColor}}
                onPress={() => this.card.current.showDetails()}
              />
            );
          }}
          renderDetails={this.renderDetails}
        />

        <View
          style={{
            height: 100,
            flexDirection: 'row',
            alignSelf: 'center',
          }}></View>
      </View>
    );
  }
}
